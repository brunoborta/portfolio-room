/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.0 .\public\models\Chair.gltf -o .\src\components\models\Chair.jsx -r public -k --shadows 
*/

import { useCallback, useRef } from "react";
import { useGLTF } from "@react-three/drei";
import gsap from "gsap";

export function Chair(props) {
  const chairRef = useRef();
  const { nodes, materials } = useGLTF("/models/Chair.gltf");

  const rotateChair = useCallback(() => {
    gsap.to(chairRef.current.rotation, {
      y: chairRef.current.rotation.y + 2 * Math.PI,
      duration: 3,
      ease: "elastic.out(1,0.75)",
    });
  }, [chairRef]);

  return (
    <group {...props} dispose={null}>
      <group name="Scene">
        <mesh
          name="Chair001"
          castShadow
          geometry={nodes.Chair001.geometry}
          material={materials["Chair feet"]}
          position={[-1.679, 2.399, 0.848]}
          rotation={[0, Math.PI / 4, 0]}
          scale={0.671}
        />
        <mesh
          onClick={rotateChair}
          ref={chairRef}
          name="Cube034"
          castShadow
          geometry={nodes.Cube034.geometry}
          material={materials.Material}
          position={[-1.674, 1.545, 0.881]}
          rotation={[0, Math.PI / 4, 0]}
          scale={0.671}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/models/Chair.gltf");
